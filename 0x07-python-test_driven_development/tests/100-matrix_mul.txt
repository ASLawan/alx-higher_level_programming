Test cases for "100-matrix_mul" modul
======================================

Importing modul
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> matrix_mul([[1, 5, 7]], [[3], [5], [8]])
[[84]]

>>> matrix_mul((1, 2, 3), (4, 5, 6))
Traceback (most recent call last):
            ...
TypeError: m_a must be a list

>>> matrix_mul(None, None)
Traceback (most recent call last):
            ...
TypeError: m_a must be a list

>>> matrix_mul([[1, 2], [3, 4]], "Austin")
Traceback (most recent call last):
            ...
TypeError: m_b must be a list

>>> matrix_mul([[1, 5, 7]], [[3], [5]])
Traceback (most recent call last):
            ...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[]], [[3], [5]])
Traceback (most recent call last):
            ...
ValueError: m_a can't be empty

>>> matrix_mul([[1, 5, 7]], [[]])
Traceback (most recent call last):
            ...
TypeError: m_b can't be empty

>>> matrix_mul([[1, 2], [3, '4']], [[1, 2], [3, 4]])
Traceback (most recent call last):
            ...
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], ['3', 4]])
Traceback (most recent call last):
            ...
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[1, 2], [3, 4], [4]], [[1, 2], [3, 4], [5, 6]])
Traceback (most recent call last):
            ...
TypeError: each row of m_a must be same size

>>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2], [4], [5, 6]])
Traceback (most recent call last):
            ...
TypeError: each row of m_b must be same size

>>> matrix_mul([[1, 2], [3, 4], [5, 6]])
Traceback (most recent call last):
            ...
TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

>>> matrix_mul()
Traceback (most recent call last):
            ...
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

>>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[1, 2], 4, [5, 6]])
Traceback (most recent call last):
            ...
TypeError: m_b must be a list of lists

>>> matrix_mul([[1, 2], 3, [5, 6]], [[1, 2], [3, 4], [5, 6]])
Traceback (most recent call last):
            ...
TypeError: m_a must be a list of lists