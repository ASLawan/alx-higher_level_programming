Test file for "2-matrix_divided" module
==============================

Importing module
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[1,2,3], [4,5,6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1,2,3], [4,5,6]], 0)
Traceback (most recent call last):
            ...
ZeroDivisionError: division by zero

>>> matrix_divided([[1,2,3], [4,5,6]], 2.5)
[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

>>> matrix_divided([], 2.5)
Traceback (most recent call last):
            ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided((1, 2, 3), 2.5)
Traceback (most recent call last):
            ...
TypeError: object of type 'int' has no len()

>>> matrix_divided([[1,2,3], [4,5,6], [9, 8]], 2.5)
Traceback (most recent call last):
            ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([["a","b","c"], [4,5,6], ['python', 'shell']], 2.5)
Traceback (most recent call last):
            ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([["1","2","3"], ["4","5","6"]], 3)
Traceback (most recent call last):
            ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1,2,3], [], [9, 8, 9]], 3)
Traceback (most recent call last):
            ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1,2,3], (4, 5, 6), [9, 8, 9]], 3)
Traceback (most recent call last):
            ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1,2,3], [4, 5, 6], [9, 8, 9]], [3])
Traceback (most recent call last):
            ...
TypeError: div must be a number